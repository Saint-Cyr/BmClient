<!DOCTYPE html>
<html ng-app="myApp">

<head>
  <title>POS1</title>
  <!--CSS Dependencies -->
  <link rel="stylesheet" href="{{ asset('css/style.css') }}" />
  <link rel="stylesheet" href="{{ asset('css/bootstrap.min.css') }}" />
  <link rel="stylesheet" href="{{ asset('css/font-awesome.min.css') }}"/>
  <link rel="stylesheet" href="{{ asset('css/select2.min.css') }}"/>
  <style>
      [title2]:hover:after{
        content: attr(title2);
        color: #a22a1a;
        font-weight: bold;
      }
  </style>
  <style>
    
    #modalContainer {
    background-color:rgba(0, 0, 0, 0.3);
    position:absolute;
    width:100%;
    height:100%;
    top:0px;
    left:0px;
    z-index:10000;
    background-image:url(tp.png); /* required by MSIE to prevent actions on lower z-index elements */
    }

    #alertBox {
        position:relative;
        width:350px;
        min-height:150px;
        margin-top:50px;
        border:1px solid #666;
        background-color:#fff;
        background-repeat:no-repeat;
        background-position:20px 30px;
    }

    #modalContainer > #alertBox {
        position:fixed;
    }

    #alertBox h1 {
        margin:0;
        font:bold 0.9em verdan,arial;
        background-color:#b7b5b6;
        color:#FFF;
        border-bottom:1px solid #000;
        padding:2px 0 2px 5px;
    }

    #alertBox p {
        font:0.7em verdana,arial;
        height:50px;
        padding-left:50px;
        margin-left: auto;
        margin-right: 8px;
        margin-top: 20px;
        font-size: 22px;
    }

    #alertBox #closeBtn {
        display:block;
        position:relative;
        margin:5px auto;
        padding:7px;
        border:0 none;
        width:70px;
        font:0.7em verdana,arial;
        text-transform:uppercase;
        text-align:center;
        color:#FFF;
        background-color:#b7b5b6;
        border-radius: 3px;
        text-decoration:none;
    }

    /* unrelated styles */

    #mContainer {
        position:relative;
        width:600px;
        margin:auto;
        padding:5px;
        border-top:2px solid #000;
        border-bottom:2px solid #000;
        font:0.7em verdana,arial;
    }

    h1,h2 {
        margin:0;
        padding:4px;
        font:bold 1.5em verdana;
        border-bottom:1px solid #000;
    }

    code {
        font-size:1.2em;
        color:#069;
    }

    #credits {
        position:relative;
        margin:25px auto 0px auto;
        width:350px; 
        font:0.7em verdana;
        border-top:1px solid #000;
        border-bottom:1px solid #000;
        height:90px;
        padding-top:4px;
    }

    #credits img {
        float:left;
        margin:5px 10px 5px 0px;
        border:1px solid #000000;
        width:80px;
        height:79px;
    }

    .important {
        background-color:#F5FCC8;
        padding:2px;
    }

    code span {
        color:green;
    }
  </style>
  <link rel='shortcut icon' type='image/x-icon' href='{{ asset('images/favicon.ico') }}' />
  <link rel='shortcut icon' type='image/x-icon' href='{{ asset('images/favicon.ico') }}' />
</head>


<p>loading....</p>

<body data-ng-controller="PosController"  style="background-color: #eee; display: none;" id="PosController">
    
    <div class="col-md-12">
        <div class="row">
            <div>
                <div class="col-md-6">
                {% verbatim %}
		<!--<span  style="font-size: 100px; color: #e81e26;">{{getTotal() | currency:" ":0}}</span>-->
                <span  style="font-size: 100px; color: #e81e26;">
                    {{getSum() | currency:" ":0}}
                </span>
                <span  style="font-size: 20px; color: #e81e26;">
                    FCFA (TTC)
                </span>
                
                </div>
		<div class="col-md-6">
		<span  style="font-size: 80px; color: gray;">
                    {{ cacheAmount - getSum() | currency:" ":0}}
                </span>
                <span  style="font-size: 20px; color: gray;">
                    FCFA (RELICA)
                </span>
                </div>
                {% endverbatim %}
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-6">
                <div class="panel panel-primary">
                <!--For HAMADJODA Machine
                <div class="panel panel-primary" style="max-height:650px; overflow:auto; min-height:650px;">-->
                    <div class="panel-body" style="max-height:650px; overflow:auto; min-height:650px;">
                        <div class="text-warning" ng-hide="order.length" style="margin-top:18%">        
                            <img src="{{ app.request.basePath }}/images/{% verbatim %}{{ gif }}" class="center-block" width="220"/>
                        </div>
                        
                        <ul class="list-group">
                            <li class="list-group-item" ng-repeat="item in order">
                                <div class="row"  style="font-size:25px;">
                                    <div class="col-md-1">
                                        <span class="badge badge-left" ng-bind="item.orderedItemCnt" style="font-size:25px;"></span>
                                    </div>
                                    <div class="col-md-4" title2="-{{ item.item.full_name }}">
                                        {{ item.item.detail }}
                                    </div>
                                    
                                    <div class="col-md-1 col-md-push-1">
                                        <div class="" style="color: red;">{{item.totalPrice | currency:"":0}}</div>
                                    </div>
                                    <div class="col-md-3 col-md-push-3">
                                        <button class="btn btn-xs" ng-click="addItem(item, $index)">
                                            <span class="fa fa-plus" style="font-size:25px;"></span>
                                        </button>
                                        <button class="btn btn-xs" ng-click="subtractItem(item, $index)">
                                            <span class="fa fa-minus" style="font-size:25px;"></span>
                                        </button>
                                    </div>
                                    <div class="col-md-1 col-md-push-2">
                                        <button class="btn btn-xs" ng-click="removeItem($index)">
                                            <span class="fa fa-trash-o" style="font-size:25px;"></span>
                                        </button>
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
                {% endverbatim %}
            </div>
            <div class="col-md-6">
                <!--For HAMADJODA Machine -->
                <!--<div class="panel panel-primary" style="max-height:500px; overflow:auto; min-height:500px;">-->
                <div class="panel panel-primary" style="max-height:650px; overflow:auto; min-height:650px;">
                <style>
                    .panel {
                        border-color : #f00;
                    }
                </style>
                    <div class="panel-body">
			<div role="tabpanel" class="tab-pane" id="food">
                            <form>
                                <div class="form-group">
                                    <select style= "width: 650px;" id="product">
                                        
                                    </select>
                                </div>
                            </form>
                        </div>    
                    </div>
                    <div class="panel-body">
			<div role="tabpanel" class="tab-pane" id="food">
                            {% for p in products %}
                                {% if p.imagePos %}
                                    <button class="btn-huge2" ng-click="addToOrder(food.{{ p.barcode }})">
                                        {{ p | slice(0, 6) | upper }}
                                    </button>
                                {% endif %}
                            {% endfor %}
                        </div>    
                    </div>
                    
                    </div>
                </div>
                </div>
                <div class="col-md-1 custom-icon">
                    <span class="fa fa-trash-o" style="margin-left: 23px;" ng-click="clearOrder()"></span>
                </div>
                <div class="col-md-5">
                <span class="btn btn-danger lg btn-checkout" ng-click="checkout()" ng-disabled="!order.length" style="font-size: 32px;">
                    CHECKOUT
                </span>
                </div>
                <div class="col-md-5">
                    <form ng-submit="checkout()">
                        <input type="text"  id="input_left_bottom" value="" data-type="currency" ng-disabled="!order.length"
			placeholder="CASH (FCFA)" autocomplete="off" ng-model="cacheAmount" class="btn-huge"/>
                    </form>
                </div>
                <div class="col-md-1 custom-icon">
                    <a href="{{ path('km_front') }}">
                        <span class="fa fa-bars" style="margin-left: 23px; color: #c4333b;" ng-click=""></span>
                    </a>
                </div>
        </div>
    </div>

</body>
<p>SPLASH Message...</p>

<!--JS Dependencies -->
  <script src="{{ asset('js/angular.js') }}"></script>
  <script src="{{ asset('js/jquery.js') }}"></script>
  <script src="{{ asset('js/bootstrap.min.js') }}"></script>
  <script src="{{ asset('js/jquery.scannerdetection.js') }}"></script>
  <script src="{{ asset('js/select2.min.js') }}"></script>
  <script type="text/javascript">
    var data = [
        {% for p in products %}
                {
                    id: {{ p.barcode }},
                    text: '<span style="font-size: 30px;">{{ p.name }}</span>',
                    title: '{{ p.name }}',
                },
        {% endfor %}
        ];
        
    

    function formatedOutput (item) {
        return item.text;
    };
      
    $(document).ready(function () {
    var select2 = $("#product").select2({
            data:data,
           
            escapeMarkup: function(markup) {
                return markup;
            },
            
        })
        
        .on("select2:selecting", function (e) { 
            var barcode = e.params.args.data.id;
            $scope = angular.element(document.getElementById("PosController")).scope();
            var item = $scope.food[barcode];
            //Make sure the barcode is loaded
            if(!item){
                var audioElement = document.createElement('audio');
                audioElement.setAttribute('src', '{{ asset('error.mp3') }}');
                audioElement.play();
                alert('Product not found.');
            }
            $scope.orderedItemCnt = 1;
            var foodItem = {
              orderedItemCnt : 1,
              totalPrice : item.price,
              itemId : item.id, 
              id : $scope.itemsCnt,
              item : item
            };
              // Find if the item is already in Cart
              var cartItems = $.grep($scope.order, function(e){ return e.itemId == item.id; });

               if(cartItems.length > 0  && !isEmpty($scope.order)){
                  cartItems[0].orderedItemCnt = ++ cartItems[0].orderedItemCnt; 
                  cartItems[0].totalPrice = item.price * cartItems[0].orderedItemCnt;
               }
               else{
                  $scope.order.push(foodItem);
                  $scope.itemsCnt = $scope.order.length; 
               }
               
               $scope.$apply();
        });
        
        select2.data('select2').$selection.css('height', '47px');
        select2.data('select2').$selection.css('text-align-last', 'center');
        select2.data('select2').$selection.css('padding-top', '7px');
        
    });
  </script>
  <script>
    // Code goes here
    var app = angular.module('myApp', []);
    app.controller('PosController', function ($scope, $http) {
    $scope.disableIt = false;
    $scope.gif = 'logo.jpg';
    
    $scope.food = {
    {% for p in products %}                 
        "{{ p.barcode }}" : {count: 1, id: {{ p.id }}, detail: "{{ p.name|slice(0, 15)|e('js')|raw }}", price: {{ p.unitPrice }}, full_name:"{{ p.name }}" }, 
    {% endfor %}
    };
    
    $(document).scannerDetection({
	timeBeforeScanTest: 200, // wait for the next character for upto 200ms
	startChar: [120], // Prefix character for the cabled scanner (OPL6845R)
	endChar: [13], // be sure the scan is complete if key 13 (enter) is detected
	avgTimeByChar: 40, // it's not a barcode if a character takes longer than 40ms
	onComplete: function(barcode, qty){
            var item = $scope.food[barcode];
            //Make sure the barcode is loaded
            if(!item){
                var audioElement = document.createElement('audio');
                audioElement.setAttribute('src', '{{ asset('error.mp3') }}');
                audioElement.play();
                alert('Product not found.');
            }
            $scope.orderedItemCnt = 1;
            var foodItem = {
              orderedItemCnt : 1,
              totalPrice : item.price,
              itemId : item.id, 
              id : $scope.itemsCnt,
              item : item
            };
              // Find if the item is already in Cart
              var cartItems = $.grep($scope.order, function(e){ return e.itemId == item.id; });

               if(cartItems.length > 0  && !isEmpty($scope.order)){
                  cartItems[0].orderedItemCnt = ++ cartItems[0].orderedItemCnt; 
                  cartItems[0].totalPrice = item.price * cartItems[0].orderedItemCnt;
               }
               else{
                  $scope.order.push(foodItem);
                  $scope.itemsCnt = $scope.order.length; 
               }
               
               $scope.$apply();
               
            }        	
    });
    
    $scope.itemsCnt = 1;
    $scope.order = [];
    $scope.isDisabled = true;

    function isEmpty(obj) {
        return Object.keys(obj).length === 0;
    }

    $scope.addToOrder = function(item) {
      $scope.orderedItemCnt = 1;
      var foodItem = {
        orderedItemCnt : 1,
        totalPrice : item.price,
        itemId : item.id, 
        id : $scope.itemsCnt,
        item : item
      };

        // Find if the item is already in Cart
        var cartItems = $.grep($scope.order, function(e){ return e.itemId == item.id; });

         if(cartItems.length > 0  && !isEmpty($scope.order)){
            cartItems[0].orderedItemCnt = ++ cartItems[0].orderedItemCnt; 
            cartItems[0].totalPrice = item.price * cartItems[0].orderedItemCnt;
         }
         else{
            $scope.order.push(foodItem);
            $scope.itemsCnt = $scope.order.length; 
         }   
    };
    
    $scope.getSum = function() {
      var i = 0,
        sum = 0;

      for(; i < $scope.order.length; i++) {
        sum += parseInt($scope.order[i].totalPrice, 10);
      }
      return sum;
    };

    $scope.addItem = function(item, index) {         
          item.orderedItemCnt = ++ item.orderedItemCnt; 
          item.totalPrice = item.item.price * item.orderedItemCnt;
    };


    $scope.subtractItem = function(item, $index)
    {
      if(item.orderedItemCnt > 1) {
          item.orderedItemCnt = -- item.orderedItemCnt; 
          item.totalPrice = item.item.price * item.orderedItemCnt;
      }
      else{
        $scope.isDisabled = true;
        // isDisabled = false;    
        // $("#SubstractItemBtn").prop("disabled", true);
      }
    }

    $scope.removeItem = function(index) {
        $scope.order.splice(index, 1);
    
    };
    
    $scope.checkout = function(index) {
       //Prevent user to send a second request
      
      //S@int-Cyr edition start here
      //Data to be sent to the server (order[])
      var order2 = $scope.order.slice(0);
      
      var data = {"data":{
          'id': 1,
          'order': order2,
          'total': $scope.getSum(),
    }};

    //Prevent user to send another request
      $scope.order = '';
      //loading the gif
      $scope.gif = 'loading.gif';
      
      //Data containing the response from the server
      var outPut = $http.post("{{ localhost }}"+'/sales/transactions', data);
      //alert( "successfull message: " + JSON.stringify({data: data}));
      //When successfull response comes from the server
      outPut.success(function(data, status, headers, config){
          alert(data);
          
          $scope.order = [];
          $scope.gif = 'logo.jpg';
      });
      
      outPut.error(function(data, status, header, config){
          var audioElement = document.createElement('audio');
                audioElement.setAttribute('src', '{{ asset('error.mp3') }}');
                audioElement.play();
          alert('[ERROR] cannot perform the transaction');
        });
      
        //Clear the cash amount in order
        $scope.cacheAmount = null;
    };
    
    $scope.clearOrder = function() {
      $scope.order = [];
    };
    
    $scope.getChange = function(){
            var change = 0;
            if($scope.getSum()){    
                change = $scope.cacheAmount - $scope.getSum();
                return change;
            }
            
            return change;
        }
    });
    
  </script>
  
  <script>
        $(document).ready(function () {
            $("#myTab a").click(function (e) {
                e.preventDefault();
                $(this).tab('show');
            });
        });

        //this is to give focus to the cash input box when shift is pressed
        $(document).on('keyup keydown', function(e)
        {
            shifted = e.shiftKey;
            if(shifted){
                $("#input_left_bottom").focus();
            };   
        });
    
    //Script for the alert box
    var ALERT_TITLE = "BSol";
    var ALERT_BUTTON_TEXT = "OK";

    if(document.getElementById) {
        window.alert = function(txt) {
            createCustomAlert(txt);
        }
    }

    function createCustomAlert(txt) {
        d = document;

        if(d.getElementById("modalContainer")) return;

        mObj = d.getElementsByTagName("body")[0].appendChild(d.createElement("div"));
        mObj.id = "modalContainer";
        mObj.style.height = d.documentElement.scrollHeight + "px";

        alertObj = mObj.appendChild(d.createElement("div"));
        alertObj.id = "alertBox";
        if(d.all && !window.opera) alertObj.style.top = document.documentElement.scrollTop + "px";
        alertObj.style.left = (d.documentElement.scrollWidth - alertObj.offsetWidth)/2 + "px";
        alertObj.style.visiblity="visible";

        h1 = alertObj.appendChild(d.createElement("h1"));
        h1.appendChild(d.createTextNode(ALERT_TITLE));

        msg = alertObj.appendChild(d.createElement("p"));
        //msg.appendChild(d.createTextNode(txt));
        msg.innerHTML = txt;

        btn = alertObj.appendChild(d.createElement("a"));
        btn.id = "closeBtn";
        btn.appendChild(d.createTextNode(ALERT_BUTTON_TEXT));
        btn.href = "#";
        btn.focus();
        btn.onclick = function() { removeCustomAlert();return false; }

        alertObj.style.display = "block";

    }

    function removeCustomAlert() {
        document.getElementsByTagName("body")[0].removeChild(document.getElementById("modalContainer"));
    }
    </script>
  
  <script type="text/javascript">
        var idleTime = 0;
        $(document).ready(function () {
            //Increment the idle time counter every minute.
            var idleInterval = setInterval(timerIncrement, 10000); // 0.5 minute

            //Zero the idle timer on mouse movement.
            $(this).mousemove(function (e) {
                idleTime = 0;
            });
            $(this).keypress(function (e) {
                idleTime = 0;
            });
        });

        function timerIncrement() {
            idleTime = idleTime + 1;
            //Every 10 sec (for idleTime > 1 )
            if (idleTime > 1) {
                //window.location.reload();
                alert('call online server');
                $.get("{{ localhost }}"+'/synchronizer');
            }
        }
        
        (function($) {
            setTimeout(function() {
                $('p').fadeOut('slow', function() {
                    $('body').fadeIn();
                });
            }, 2000);
        })(jQuery);
    </script>
</html>